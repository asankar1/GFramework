name: CMake

on: 
  push:
    branches:
      - ci_setup


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    strategy:
      matrix:
        build_config: [Release, Debug]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Checkout submodule third_party/lua
      run: git submodule update --init third_party/lua
    - name: Checkout submodule third_party/glm
      run: git submodule update --init third_party/glm

    - name: Configure CMake for ${{ matrix.build_config }}
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build_vs2015_${{ matrix.build_config }} -DCMAKE_BUILD_TYPE=${{ matrix.build_config }} -G "Visual Studio 16 2019" -A x64 -T v140

    - name: Building ${{ matrix.build_config }}
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build_vs2015 --config ${{ matrix.build_config }} --target install

    
